数据结构是计算机存储、组织数据的方式.数据结构是指互相之间存在一种或多种特定关系的数据元素的集合,
大部分数据结构的实现都需要借助C语言中的指针和结构体类型.
1.线性数据结构:元素之间一般存在元素之间存在一对一关系,是最常用的一类数据结构,
典型的有:数组 栈 队列 线性表
2.树状结构:结点之间具有层次关系,每一层的一个节点能且只能和上一层的一个节点相关,
单同时可以和下一层的多个节点相关.称为"一对多"的关系
典型的有:树 堆
3.图形结构:在图形结构中,允许多个节点之间相关,称为"多对多"的关系.

a.数组:存放着一组相同类型的数据,需要预先指定数组的长度,有一维数组、二维数组、多维数组.
b.链表:它采用动态分配内存的形式实现，用一组任意的存储单元存放数据元素链表的，
一般为每个元素增设指针域，用来指向后继元素,是C语言中应用广泛的结构.
c.数组和链表的区别:
逻辑上:
数组必须事先定义长度,不能适应数据动态地增减的情况;链表则是采用动态存储分配,
可以适应数据动态地增减的情况，且可以方便地插入、删除数据.
内存上:
数组从栈中分配空间(用NEW创建的在堆中),方便快捷但自由度小,
链表从堆中分配空间,自由度大但是申请管理麻烦.
从访问方式看:
数组在内存中是连续存储的,因此,可以利用下标索引进行随机访问;
链表是链式存储的,在访问元素的时候只能通过线性的方式由前到后顺序访问,所以访问效率比数组要低

顺序存储:借助数据元素在存储空间中的相对位置来表示元素之间的逻辑关系.
链式存储:借助表示数据元素存储地址的指针表示元素之间的逻辑关系

栈:栈只允许在序列末端进行操作,操作只能在栈顶进行,是后进先出,先进后出的先性机构

队列:只允许在序列两端进行操作,一般队列也被称为先进先出,后进后出的线性结构.

线性表:允许在序列仍以位置进行操作,线性表的操作位置不收限制,线性表的操作十分灵活,
常用操作包括在仍以位置插入和删除,以及查询和修改任意位置的元素.


